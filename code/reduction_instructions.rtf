{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28600\viewh16520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 README \
20130104\
\
The software reported here is based off of Dan Perley's Keck/LRIS reduction pipeline.  Inside the sw folder, Dan provides a complete manual and quickstart routine.  I encourage you to read those documents to fully understand the requirements to run this package.  Forgive the naming convention for now.  All code still uses LRIS references.\
\
---Make sure all paths in your setup files are set correctly to run the code.---\
\
For now, you should know that you need:\
-IDL\
-Python\
-SExtractor\
-SWarp\
\
The last three should all be downloadable and installable via Mac's 'port' command.  \
\
STEP 1 - Prepare files for pipeline.\
\
All preprocessing is done in Python.  It is convenient to enter the ipython environment to execute the following commands.\
\
After entering ipython, load the preprocessing commands:\
	In [1]: from rat_preproc import *\
\
Run ratlist function to create lists (can select desired cameras):\
	In [2]: ratlist( workdir = 'path/to/FITS/files/', cams = [0,1,2,3] )\
This outputs a list for each camera.  You must run this script on each directory containing data to be processed (i.e. flats, grb data, etc.).\
\
Run ratdisp_calib to select calibration frames you want to use.  For example, if processing flat frames:\
	In [3]: ratdisp_calib( ftype=af.FLAT_NAME, workdir='path/to/FITS/flats/', cams=[0,1,2,3], auto=True, amin=0.1, amax=0.8 )\
If auto is False, frames will be displayed for selection by the user.  Otherwise the script will select frames.  All bias frames will be accepted.  Flats are selected by comparing the median value of the frame to the detector's saturation value.  Varying amin and amax allows the user to tune the range of median values automatically accepted as a fraction of the saturation value.\
The flat-field procedure is automated, so most of the early frames are saturated.\
\
Now, do the same thing for the actual data:\
	In [4]: ratlist( workdir = 'path/to/FITS/files/', cams = [0,1,2,3] )\
	In [5]: ratdisp( workdir='path/to/FITS/files/', targetdir='path/to/new/FITS/files/', cams=[0,1,2,3], auto=True )\
If using the automated selection, all science frames will be selected.  Otherwise, frames will be displayed for the user to select.  For H2RG frames, the user must select if the target is on the East (left) or West (right) side of the field.  The script will output which side the FITs header says the target was focused on.\
\
STEP 2 - Make your master calibration frames\
\
These steps are also done in the Python environment with rat_preproc loaded.\
\
To make a master bias or flat frame:\
	In [6]: mkmaster( af.BIAS_NAME or af.FLAT_NAME, bands='ALL', workdir='.', fmin=5 )\
If bands = 'ALL' the script will create a master frame for all lists in the working directory.  The user may also specify a list of desired bands.  fmin determines the minimum number of frames needed to create a master frame.  If the number of frames available is less than this, the user will be warned and asked whether to continue.\
\
STEP 3 - Run the Keck/LRIS Pipeline\
\
First, go into your data directory, and move all the prepared data into a "raw" folder.\
Also move the flats into the redux folder.\
ofox% cd grb_v3/\
ofox% mkdir raw\
ofox% mv *img* raw\
ofox% mv *sky* raw\
ofox% mkdir imredux\
ofox% cp ../flats_20121212/flat_*fits imredux/\
\
idl> ratautoproc, datadir='raw/', mode='im',redo=1\
\
STEP 4 - Perform Photometry\
\
Move the necessary data\
ofox% mkdir photometry\
ofox% cp imredux/coadd*fits photometry/\
ofox% cp imredux/*.cal photometry/\
ofox% cp imredux/*.txt photometry/\
\
Run SExtractor and compare output magnitudes to catalogues\
idl> ratphot,prefix="coadd2012A-1000-vis3"\
\
---View plot to obtain limiting magnitudes\
\
\
\
}